#include <iostream>
#include <unistd.h>
#include <string.h>
#include <thread>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

void receiveMessages(int sock) {
    char buffer[1024];
    while (true) {
        memset(buffer, 0, sizeof(buffer));
        int valread = read(sock, buffer, sizeof(buffer));
        if (valread <= 0) {
            std::cout << "Connexion fermée par le serveur." << std::endl;
            break;
        }
        std::cout << "\nServeur: " << buffer << std::endl;
    }
}

void sendMessages(int sock) {
    std::string message;
    while (true) {
        std::getline(std::cin, message);
        send(sock, message.c_str(), message.length(), 0);
        if (message == "exit") {
            break;
        }
    }
}

int main() {
    int sock = socket(AF_INET, SOCK_STREAM, 0);
    sockaddr_in serv_addr;

    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(8080);
    inet_pton(AF_INET, "127.0.0.1", &serv_addr.sin_addr);

    connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr));
    std::cout << "Connecté au serveur !" << std::endl;

    std::thread recvThread(receiveMessages, sock);
    std::thread sendThread(sendMessages, sock);

    sendThread.join();
    recvThread.join();

    close(sock);
    return 0;
}
